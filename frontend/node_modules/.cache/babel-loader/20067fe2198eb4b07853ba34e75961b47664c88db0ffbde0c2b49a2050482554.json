{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"../components/useAuthContext\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setLoading(true);\n    setError(true);\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = response.json();\n    if (!response.ok) {\n      setLoading(false);\n      //@ts-ignore\n      setError(json);\n    }\n    if (response.ok) {\n      // save the user to local strorage\n      localStorage.setItem('user', JSON.stringify(json));\n      // update auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"arhZX7x6Ogg3seM2SxXrHi1qx8U=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/MojeFoldery/kodowanie/MERN/frontend/src/components/useSignup.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"../components/useAuthContext\";\r\n\r\n\r\n\r\nexport const useSignup = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setLoading] = useState(null);\r\n  const { dispatch } = useAuthContext();\r\n\r\n  const signup = async (email, password) => {\r\n    setLoading(true);\r\n    setError(true);\r\n\r\n    const response = await fetch('/api/user/signup', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({email, password})\r\n    })\r\n\r\n    const json = response.json();\r\n\r\n    if (!response.ok) {\r\n      setLoading(false);\r\n      //@ts-ignore\r\n      setError(json);\r\n    }\r\n    if (response.ok) {\r\n      // save the user to local strorage\r\n      localStorage.setItem('user', JSON.stringify(json));\r\n      // update auth context\r\n      dispatch({ type: 'LOGIN', payload: json });\r\n\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return {signup, isLoading, error}\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,8BAA8B;AAI7D,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACxCJ,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAAEC;MAAQ,CAAC;IACxC,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAGP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAE5B,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChBb,UAAU,CAAC,KAAK,CAAC;MACjB;MACAF,QAAQ,CAACc,IAAI,CAAC;IAChB;IACA,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACf;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAClD;MACAX,QAAQ,CAAC;QAAEe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAK,CAAC,CAAC;MAE1CZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IAACE,MAAM;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACnC,CAAC;AAAAD,EAAA,CAjCYD,SAAS;EAAA,QAGCD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}